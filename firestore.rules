rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from their token claims
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isSupervisor() {
      return request.auth.token.role == 'supervisor';
    }
    
    function isWorker() {
      return request.auth.token.role == 'worker';
    }

    function isEmployee() {
      return isWorker() || isSupervisor();
    }
    
    function isSuperOrAdmin() {
      return isSupervisor() || isAdmin();
    }

    // --- Users ---
    // Admins can read/write any user.
    // Users can only read/update their own data.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create, delete: if isAdmin();
    }

    // --- Read-only for users, writable for admins ---
    match /materialsCatalog/{materialId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /taskTypes/{taskTypeId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
     match /rates/{rateId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /aggregates/{aggId} {
       allow read: if isSuperOrAdmin();
       allow write: if false; // Only functions can write
    }

    // --- Jobs and Subcollections ---
    // Any authenticated user can create a job.
    // Only supervisors or admins can delete a job.
    // Users can update jobs (e.g. status), but costs are function-written.
    match /jobs/{jobId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if isSuperOrAdmin();

      // Materials subcollection
      match /materials/{materialId} {
        allow read, create, update, delete: if request.auth != null;
      }

      // Sessions subcollection
      // Users can only manage their own sessions
      match /sessions/{sessionId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth.uid == request.resource.data.userId || isSuperOrAdmin();
        allow delete: if request.auth.uid == resource.data.userId || isSuperOrAdmin();
      }
    }
  }
}